<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.data.mapper.DeviceMapper">

    <resultMap type="Device" id="DeviceResult">
        <result property="id" column="id"/>
        <result property="sn" column="sn"/>
        <result property="name" column="name"/>
        <result property="belongsto" column="belongsto"/>
        <result property="owner" column="owner"/>
        <result property="classify" column="classify"/>
        <result property="status" column="status"/>
        <result property="function" column="function"/>
        <result property="pic" column="pic"/>
        <result property="video" column="video"/>
    </resultMap>

    <sql id="selectDeviceVo">
        select id, sn, name, belongsto, owner, classify, status, function, pic, video from t_device
    </sql>

    <select id="selectDeviceList" parameterType="Device" resultMap="DeviceResult">
        <include refid="selectDeviceVo"/>
        <where>
            <if test="name != null  and name != ''">and name like concat('%', #{name}, '%')</if>
            <if test="belongsto != null  and belongsto != ''">and belongsto like concat('%', #{belongsto}, '%')</if>
            <if test="owner != null ">and owner = #{owner}</if>
            <if test="function != null ">and function = #{function}</if>
        </where>
    </select>

    <select id="selectDeviceById" parameterType="Long" resultMap="DeviceResult">
        <include refid="selectDeviceVo"/>
        where id = #{id}
    </select>

    <insert id="insertDevice" parameterType="Device">
        insert into t_device
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null ">id,</if>
            <if test="sn != null  and sn != ''">sn,</if>
            <if test="name != null  and name != ''">name,</if>
            <if test="belongsto != null  and belongsto != ''">belongsto,</if>
            <if test="owner != null ">owner,</if>
            <if test="classify != null  and classify != ''">classify,</if>
            <if test="status != null ">status,</if>
            <if test="function != null ">function,</if>
            <if test="pic != null  and pic != ''">pic,</if>
            <if test="video != null  and video != ''">video,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null ">#{id},</if>
            <if test="sn != null  and sn != ''">#{sn},</if>
            <if test="name != null  and name != ''">#{name},</if>
            <if test="belongsto != null  and belongsto != ''">#{belongsto},</if>
            <if test="owner != null ">#{owner},</if>
            <if test="classify != null  and classify != ''">#{classify},</if>
            <if test="status != null ">#{status},</if>
            <if test="function != null ">#{function},</if>
            <if test="pic != null  and pic != ''">#{pic},</if>
            <if test="video != null  and video != ''">#{video},</if>
        </trim>
    </insert>

    <update id="updateDevice" parameterType="Device">
        update t_device
        <trim prefix="SET" suffixOverrides=",">
            <if test="sn != null  and sn != ''">sn = #{sn},</if>
            <if test="name != null  and name != ''">name = #{name},</if>
            <if test="belongsto != null  and belongsto != ''">belongsto = #{belongsto},</if>
            <if test="owner != null ">owner = #{owner},</if>
            <if test="classify != null  and classify != ''">classify = #{classify},</if>
            <if test="status != null ">status = #{status},</if>
            <if test="function != null ">function = #{function},</if>
            <if test="pic != null  and pic != ''">pic = #{pic},</if>
            <if test="video != null  and video != ''">video = #{video},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteDeviceById" parameterType="Long">
        delete from t_device where id = #{id}
    </delete>

    <delete id="deleteDeviceByIds" parameterType="String">
        delete from t_device where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectAllocatedList" parameterType="Long" resultMap="DeviceResult">
        select d.id, d.sn, d.name, d.belongsto, d.owner, d.classify, d.status, d.function, d.pic, d.video
        from t_device d
        inner join t_station_device sd on d.id = sd.device_id
        where sd.station_id = #{stationId}
    </select>

    <select id="selectUnallocatedList" parameterType="StationDeviceVO" resultMap="DeviceResult">
        select d.id, d.sn, d.name, d.belongsto, d.owner, d.classify, d.status, d.function, d.pic, d.video
        from t_device d
        where d.id not in (
        select distinct device_id from t_station_device
        )
        <if test="name != null  and name != ''">and d.name = #{name}</if>
        <if test="belongsto != null  and belongsto != ''">and belongsto = #{belongsto}</if>
        <if test="owner != null ">and owner = #{owner}</if>
    </select>

</mapper>